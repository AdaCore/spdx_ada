package SPDX.Exceptions is

   pragma Style_Checks (Off); --  Genrated code

   Version : constant String :="3.10-14-g0fb8a59";

   type Id is (
               GCC_exception_2_0,
               openvpn_openssl_exception,
               GPL_3_0_linking_exception,
               Fawkes_Runtime_exception,
               u_boot_exception_2_0,
               PS_or_PDF_font_exception_20170817,
               gnu_javamail_exception,
               LGPL_3_0_linking_exception,
               DigiRule_FOSS_exception,
               LLVM_exception,
               Linux_syscall_note,
               GPL_3_0_linking_source_exception,
               Qwt_exception_1_0,
               Id_389_exception,
               mif_exception,
               eCos_exception_2_0,
               CLISP_exception_2_0,
               Bison_exception_2_2,
               Libtool_exception,
               LZMA_exception,
               OpenJDK_assembly_exception_1_0,
               Font_exception_2_0,
               OCaml_LGPL_linking_exception,
               GCC_exception_3_1,
               Bootloader_exception,
               SHL_2_0,
               Classpath_exception_2_0,
               Swift_exception,
               Autoconf_exception_2_0,
               FLTK_exception,
               freertos_exception_2_0,
               Universal_FOSS_exception_1_0,
               WxWindows_exception_3_1,
               OCCT_exception_1_0,
               Autoconf_exception_3_0,
               i2p_gpl_java_exception,
               GPL_CC_1_0,
               Qt_LGPL_exception_1_1,
               SHL_2_1,
               Qt_GPL_exception_1_0);

   function Img (I : Id) return String
   is (case I is
          when GCC_exception_2_0 => "GCC-exception-2.0",
          when openvpn_openssl_exception => "openvpn-openssl-exception",
          when GPL_3_0_linking_exception => "GPL-3.0-linking-exception",
          when Fawkes_Runtime_exception => "Fawkes-Runtime-exception",
          when u_boot_exception_2_0 => "u-boot-exception-2.0",
          when PS_or_PDF_font_exception_20170817 => "PS-or-PDF-font-exception-20170817",
          when gnu_javamail_exception => "gnu-javamail-exception",
          when LGPL_3_0_linking_exception => "LGPL-3.0-linking-exception",
          when DigiRule_FOSS_exception => "DigiRule-FOSS-exception",
          when LLVM_exception => "LLVM-exception",
          when Linux_syscall_note => "Linux-syscall-note",
          when GPL_3_0_linking_source_exception => "GPL-3.0-linking-source-exception",
          when Qwt_exception_1_0 => "Qwt-exception-1.0",
          when Id_389_exception => "389-exception",
          when mif_exception => "mif-exception",
          when eCos_exception_2_0 => "eCos-exception-2.0",
          when CLISP_exception_2_0 => "CLISP-exception-2.0",
          when Bison_exception_2_2 => "Bison-exception-2.2",
          when Libtool_exception => "Libtool-exception",
          when LZMA_exception => "LZMA-exception",
          when OpenJDK_assembly_exception_1_0 => "OpenJDK-assembly-exception-1.0",
          when Font_exception_2_0 => "Font-exception-2.0",
          when OCaml_LGPL_linking_exception => "OCaml-LGPL-linking-exception",
          when GCC_exception_3_1 => "GCC-exception-3.1",
          when Bootloader_exception => "Bootloader-exception",
          when SHL_2_0 => "SHL-2.0",
          when Classpath_exception_2_0 => "Classpath-exception-2.0",
          when Swift_exception => "Swift-exception",
          when Autoconf_exception_2_0 => "Autoconf-exception-2.0",
          when FLTK_exception => "FLTK-exception",
          when freertos_exception_2_0 => "freertos-exception-2.0",
          when Universal_FOSS_exception_1_0 => "Universal-FOSS-exception-1.0",
          when WxWindows_exception_3_1 => "WxWindows-exception-3.1",
          when OCCT_exception_1_0 => "OCCT-exception-1.0",
          when Autoconf_exception_3_0 => "Autoconf-exception-3.0",
          when i2p_gpl_java_exception => "i2p-gpl-java-exception",
          when GPL_CC_1_0 => "GPL-CC-1.0",
          when Qt_LGPL_exception_1_1 => "Qt-LGPL-exception-1.1",
          when SHL_2_1 => "SHL-2.1",
          when Qt_GPL_exception_1_0 => "Qt-GPL-exception-1.0");

   function Name (I : Id) return String
   is (case I is
          when GCC_exception_2_0 => "GCC Runtime Library exception 2.0",
          when openvpn_openssl_exception => "OpenVPN OpenSSL Exception",
          when GPL_3_0_linking_exception => "GPL-3.0 Linking Exception",
          when Fawkes_Runtime_exception => "Fawkes Runtime Exception",
          when u_boot_exception_2_0 => "U-Boot exception 2.0",
          when PS_or_PDF_font_exception_20170817 => "PS/PDF font exception (2017-08-17)",
          when gnu_javamail_exception => "GNU JavaMail exception",
          when LGPL_3_0_linking_exception => "LGPL-3.0 Linking Exception",
          when DigiRule_FOSS_exception => "DigiRule FOSS License Exception",
          when LLVM_exception => "LLVM Exception",
          when Linux_syscall_note => "Linux Syscall Note",
          when GPL_3_0_linking_source_exception => "GPL-3.0 Linking Exception (with Corresponding Source)",
          when Qwt_exception_1_0 => "Qwt exception 1.0",
          when Id_389_exception => "389 Directory Server Exception",
          when mif_exception => "Macros and Inline Functions Exception",
          when eCos_exception_2_0 => "eCos exception 2.0",
          when CLISP_exception_2_0 => "CLISP exception 2.0",
          when Bison_exception_2_2 => "Bison exception 2.2",
          when Libtool_exception => "Libtool Exception",
          when LZMA_exception => "LZMA exception",
          when OpenJDK_assembly_exception_1_0 => "OpenJDK Assembly exception 1.0",
          when Font_exception_2_0 => "Font exception 2.0",
          when OCaml_LGPL_linking_exception => "OCaml LGPL Linking Exception",
          when GCC_exception_3_1 => "GCC Runtime Library exception 3.1",
          when Bootloader_exception => "Bootloader Distribution Exception",
          when SHL_2_0 => "Solderpad Hardware License v2.0",
          when Classpath_exception_2_0 => "Classpath exception 2.0",
          when Swift_exception => "Swift Exception",
          when Autoconf_exception_2_0 => "Autoconf exception 2.0",
          when FLTK_exception => "FLTK exception",
          when freertos_exception_2_0 => "FreeRTOS Exception 2.0",
          when Universal_FOSS_exception_1_0 => "Universal FOSS Exception, Version 1.0",
          when WxWindows_exception_3_1 => "WxWindows Library Exception 3.1",
          when OCCT_exception_1_0 => "Open CASCADE Exception 1.0",
          when Autoconf_exception_3_0 => "Autoconf exception 3.0",
          when i2p_gpl_java_exception => "i2p GPL+Java Exception",
          when GPL_CC_1_0 => "GPL Cooperation Commitment 1.0",
          when Qt_LGPL_exception_1_1 => "Qt LGPL exception 1.1",
          when SHL_2_1 => "Solderpad Hardware License v2.1",
          when Qt_GPL_exception_1_0 => "Qt GPL exception 1.0");

   function Valid_Id (Str : String) return Boolean;
   function From_Id (Str : String) return Id;

end SPDX.Exceptions;
